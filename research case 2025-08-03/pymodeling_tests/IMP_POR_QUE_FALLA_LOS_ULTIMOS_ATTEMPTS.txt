To curve the slope instead of keeping it linear, you just need to apply a nonlinear function (e.g. a quadratic or smoothstep) to the normalized y values. A simple and effective curve is a quadratic easing like:

z_top = 0.5 + (y_norm ** 2) * 20

This makes the slope start flatter and increase more steeply as y increases — a classic curved effect.
✅ Final Code Change (One Line):

Replace this line:

z_top = 0.5 + y_norm * 1.0 * 20

With this curved version:

z_top = 0.5 + (y_norm ** 2) * 20

🔁 Result:

    Same direction of slope (along y-axis).

    Curved slope — Z increases nonlinearly, making the slope feel more natural or sculpted.

Let me know if you want the curve to go the other way (steep first, then flat), or to use something like a sine wave or a bezier-style ease.



You said:
ok, so top surface becomes fragmented like radiating, when i do that change, i imagine there must be some additional requirement for creating the faces on curved slopes on irregular polygons, maybe we need points in the middle and not just in the border?



ChatGPT said:

You're absolutely right — and you're touching on a core challenge when lofting or extruding irregular polygons into 3D with nonlinear deformation like a curved slope:

    ✅ Linear slopes are fine with just top/bottom edges because the Z-difference is uniform per vertex
    ❌ Curved slopes break this assumption — the surface becomes non-planar and non-uniform, which leads to visible fragmentation, especially along triangulation seams

🔍 Why it Looks Fragmented Now

When you apply a curved Z function (like y_norm ** 2), you’re bending the top surface. But the top surface was triangulated assuming a flat Z. So:

    The top triangles no longer lie in a plane, because their vertices now have Zs that bend in different directions

    Triangulation (done before extruding to 3D) doesn’t "know" that this will happen — it just connects points assuming flatness

    This leads to "radiating" or stretched artifacts along internal edges

🛠️ Solutions
✅ Option 1: Subdivide the polygon surface more

Add interior points before extrusion to give the mesh more resolution to represent the curved shape smoothly.

You can do this by densifying or remeshing the polygon before triangulation.
✅ Option 2: Apply curve after extruding a flat mesh

Instead of building a top from a deformed flat polygon, you could:

    Extrude the polygon flat (top and bottom same Z)

    Then apply the Z-deformation as a post-processing step to the top vertices only

This avoids misaligning the triangulation, since it assumes the triangles are defined first, and then bent uniformly.
🧪 Here's a simple fix using Option 2

Right now you do this:

z_top = 0.5 + (y_norm ** 2) * 20
top_verts = np.column_stack((tri_verts_2d, z_top))

Instead, do this:

# Start flat
top_verts = np.column_stack((tri_verts_2d, np.zeros(len(tri_verts_2d))))

# Then curve only the top part
y_norm = (top_verts[:,1] - top_verts[:,1].min()) / np.ptp(top_verts[:,1])
top_verts[:,2] = 0.5 + (y_norm ** 2) * 20

This gives you better triangulation continuity and less “radiating” because the triangle structure stays consistent.
✅ Summary

You were right — curved surfaces require more careful treatment than linear ones. You can:

    Densify the polygon (interior points)

    Or deform after extrusion (recommended for simplicity)

Let me know if you want to try remeshing for higher resolution, or stick to deforming after extrusion.